// <auto-generated />
using Assignment.DataBaseAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment.Migrations
{
    [DbContext(typeof(InventoryManagementDbContext))]
    [Migration("20240307063815_initdata")]
    partial class initdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment.Models.ProductCategoryModel", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CategoryId");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Discription");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Assignment.Models.ProductModel", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("ProductId");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CategoryId");

                    b.Property<string>("ProductDiscription")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ProductDiscription");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ProductName");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ProductPrice");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int")
                        .HasColumnName("ProductQuantity");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Assignment.Models.ProductModel", b =>
                {
                    b.HasOne("Assignment.Models.ProductCategoryModel", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Assignment.Models.ProductCategoryModel", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
